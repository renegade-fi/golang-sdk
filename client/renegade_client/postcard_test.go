package client

import (
	"math/big"
	"testing"

	"github.com/stretchr/testify/assert"
)

// expectedOutput is the expected output for the postcardSerializeTransfer function for the random test case
// this was generated by serializing a random transfer in rust
var expectedOutput = []byte{142, 202, 97, 95, 107, 153, 43, 246, 30, 120, 166, 178, 131, 159, 29, 20, 211, 177, 61, 38, 140, 95, 223, 16, 34, 219, 175, 128, 181, 197, 132, 172, 99, 135, 122, 137, 47, 58, 44, 67, 248, 145, 155, 192, 209, 217, 170, 198, 152, 1, 199, 136, 252, 202, 223, 144, 198, 249, 94, 0, 0, 1}

func TestPostcardSerializeTransfer(t *testing.T) {
	addr, ok := new(big.Int).SetString("815189922348671345160288568434790497667467263270", 10)
	assert.True(t, ok)
	addrHex := addr.Text(16)

	mint, ok := new(big.Int).SetString("801396710239813020348950928165253770416630672451", 10)
	assert.True(t, ok)
	mintHex := mint.Text(16)

	amount, ok := new(big.Int).SetString("126209657132758792812493270134108375288", 10)
	assert.True(t, ok)

	serialized, err := postcardSerializeTransfer(mintHex, amount, &addrHex)
	assert.NoError(t, err)
	assert.Equal(t, expectedOutput, serialized)
}
